/*
 * Swagger Onboarding
 * This API provides REST end points for Boarding of customer into system.
 *
 * OpenAPI spec version: 8.1.0
 * Contact: DL-WPT-Lords-Of-Code@worldpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.worldpay.bna.onboarding.services;

import com.worldpay.bna.onboarding.services.invoker.ApiException;
import com.worldpay.bna.onboarding.services.model.EnforcedLimitDetails;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchantEnforcedLimitApi
 */
@Ignore
public class MerchantEnforcedLimitApiTest {

    private final MerchantEnforcedLimitApi api = new MerchantEnforcedLimitApi();

    
    /**
     * Fetching Merchant Enforced Limit Forms
     *
     * Returns Merchant Enforced Limit Forms
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantEnforcedLimitsTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String merchantNumber = null;
        EnforcedLimitDetails response = api.getMerchantEnforcedLimits(userId, userType, dataRoleId, roleId, merchantNumber);

        // TODO: test validations
    }
    
    /**
     * Returns whether Sale is active or not
     *
     * Find whether Sale is active or not
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void isSaleActiveOnMerchantTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String merchantId = null;
        String response = api.isSaleActiveOnMerchant(userId, userType, dataRoleId, roleId, merchantId);

        // TODO: test validations
    }
    
    /**
     * Associate Enforced Limits with any merchant only if Agent is associated with Merchant
     *
     * Associate Enforced Limit
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMerchantEnforcedLimitsTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String userName = null;
        String merchantNumber = null;
        List<EnforcedLimitDetails> enforcedLimitDetails = null;
        EnforcedLimitDetails response = api.updateMerchantEnforcedLimits(userId, userType, dataRoleId, roleId, userName, merchantNumber, enforcedLimitDetails);

        // TODO: test validations
    }
    
}
