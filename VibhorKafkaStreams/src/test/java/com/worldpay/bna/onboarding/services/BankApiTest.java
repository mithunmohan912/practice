/*
 * Swagger Onboarding
 * This API provides REST end points for Boarding of customer into system.
 *
 * OpenAPI spec version: 8.1.0
 * Contact: DL-WPT-Lords-Of-Code@worldpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.worldpay.bna.onboarding.services;

import com.worldpay.bna.onboarding.services.invoker.ApiException;
import com.worldpay.bna.onboarding.services.model.Bank;
import com.worldpay.bna.onboarding.services.model.BankResponse;
import com.worldpay.bna.onboarding.services.model.Banks;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BankApi
 */
@Ignore
public class BankApiTest {

    private final BankApi api = new BankApi();

    
    /**
     * Add bank in system
     *
     * Returns status
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBankTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        Bank bank = null;
        BankResponse response = api.addBank(userId, userType, dataRoleId, roleId, bank);

        // TODO: test validations
    }
    
    /**
     * Find bank by search criteria
     *
     * Returns a bank
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBanksTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        Integer bankId = null;
        String bankCode = null;
        String bankName = null;
        String branchName = null;
        Banks response = api.getBanks(userId, userType, dataRoleId, roleId, bankId, bankCode, bankName, branchName);

        // TODO: test validations
    }
    
    /**
     * Update bank in system
     *
     * Returns status
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBankTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        Bank bank = null;
        BankResponse response = api.updateBank(userId, userType, dataRoleId, roleId, bank);

        // TODO: test validations
    }
    
}
