/*
 * Swagger Onboarding
 * This API provides REST end points for Boarding of customer into system.
 *
 * OpenAPI spec version: 8.1.0
 * Contact: DL-WPT-Lords-Of-Code@worldpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.worldpay.bna.onboarding.services;

import com.worldpay.bna.onboarding.services.invoker.ApiException;
import com.worldpay.bna.onboarding.services.model.BnaApiResponse;
import com.worldpay.bna.onboarding.services.model.User;
import com.worldpay.bna.onboarding.services.model.UserAccountResponse;
import com.worldpay.bna.onboarding.services.model.UserRegistration;
import com.worldpay.bna.onboarding.services.model.UserResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Add User in system
     *
     * Returns status
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addUserTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        UserRegistration userRegistration = null;
        String isSyncReqd = null;
        BnaApiResponse response = api.addUser(userId, userType, dataRoleId, roleId, userRegistration, isSyncReqd);

        // TODO: test validations
    }
    
    /**
     * Find User Accounts
     *
     * Returns user accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserAccountsTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String pUserId = null;
        String typeNumber = null;
        String pUserType = null;
        UserResponse response = api.getUserAccounts(userId, userType, dataRoleId, roleId, pUserId, typeNumber, pUserType);

        // TODO: test validations
    }
    
    /**
     * Update User in system
     *
     * Returns status
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        User user = null;
        UserAccountResponse response = api.updateUser(userId, userType, dataRoleId, roleId, user);

        // TODO: test validations
    }
    
}
