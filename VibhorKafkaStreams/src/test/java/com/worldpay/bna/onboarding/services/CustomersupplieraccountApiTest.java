/*
 * Swagger Onboarding
 * This API provides REST end points for Boarding of customer into system.
 *
 * OpenAPI spec version: 8.1.0
 * Contact: DL-WPT-Lords-Of-Code@worldpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.worldpay.bna.onboarding.services;

import com.worldpay.bna.onboarding.services.invoker.ApiException;
import com.worldpay.bna.onboarding.services.model.CustomerSupplierAccount;
import com.worldpay.bna.onboarding.services.model.CustomerSupplierAccountResponse;
import com.worldpay.bna.onboarding.services.model.CustomerSupplierAccounts;
import java.io.File;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersupplieraccountApi
 */
@Ignore
public class CustomersupplieraccountApiTest {

    private final CustomersupplieraccountApi api = new CustomersupplieraccountApi();

    
    /**
     * Add customersupplieraccount in system
     *
     * Returns status
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomerSupplierAccountTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        CustomerSupplierAccount customerSupplierAccount = null;
        CustomerSupplierAccountResponse response = api.addCustomerSupplierAccount(userId, userType, dataRoleId, roleId, customerSupplierAccount);

        // TODO: test validations
    }
    
    /**
     * Fetch Customer Supplier Accounts matching the criteria specified
     *
     * Return CSV Export for Customer Supplier Accounts fetched
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerSupplierAccountExportTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String customerCode = null;
        String customerName = null;
        String type = null;
        String nameAbbreviation = null;
        String mode = null;
        String accountManagerName = null;
        String referredByCode = null;
        String customerSupplierType = null;
        String financialPartnerCode = null;
        File response = api.getCustomerSupplierAccountExport(userId, userType, dataRoleId, roleId, customerCode, customerName, type, nameAbbreviation, mode, accountManagerName, referredByCode, customerSupplierType, financialPartnerCode);

        // TODO: test validations
    }
    
    /**
     * Find Customer Supplier Account
     *
     * Returns a Customer Supplier Accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerSupplierAccountsTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String customerCode = null;
        String customerName = null;
        String type = null;
        String nameAbbreviation = null;
        String mode = null;
        String accountManagerName = null;
        String referredByCode = null;
        String customerSupplierType = null;
        String financialPartnerCode = null;
        CustomerSupplierAccounts response = api.getCustomerSupplierAccounts(userId, userType, dataRoleId, roleId, customerCode, customerName, type, nameAbbreviation, mode, accountManagerName, referredByCode, customerSupplierType, financialPartnerCode);

        // TODO: test validations
    }
    
    /**
     * Find Customer Supplier Account by bankAccountId
     *
     * Returns a Customer Supplier Accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerSupplierAccountsByBankAccountTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        Integer bankAccountId = null;
        CustomerSupplierAccounts response = api.getCustomerSupplierAccountsByBankAccount(userId, userType, dataRoleId, roleId, bankAccountId);

        // TODO: test validations
    }
    
    /**
     * Update a CustomerSupplierAccount
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomerSupplierAccountTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        CustomerSupplierAccount customerSupplierAccount = null;
        CustomerSupplierAccountResponse response = api.updateCustomerSupplierAccount(userId, userType, dataRoleId, roleId, customerSupplierAccount);

        // TODO: test validations
    }
    
}
