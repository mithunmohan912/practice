/*
 * Swagger Onboarding
 * This API provides REST end points for Boarding of customer into system.
 *
 * OpenAPI spec version: 8.1.0
 * Contact: DL-WPT-Lords-Of-Code@worldpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.worldpay.bna.onboarding.services;

import com.worldpay.bna.onboarding.services.invoker.ApiException;
import com.worldpay.bna.onboarding.services.model.CardIssuer;
import com.worldpay.bna.onboarding.services.model.CardIssuerDetailList;
import com.worldpay.bna.onboarding.services.model.CardIssuersArrayResponse;
import com.worldpay.bna.onboarding.services.model.CardIssuersResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardissuersApi
 */
@Ignore
public class CardissuersApiTest {

    private final CardissuersApi api = new CardissuersApi();

    
    /**
     * Add cardissuers in system
     *
     * Add cardissuers in system
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCardIssuersTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        CardIssuer cardIssuer = null;
        CardIssuersResponse response = api.addCardIssuers(userId, userType, dataRoleId, roleId, cardIssuer);

        // TODO: test validations
    }
    
    /**
     * Find CardIssuer
     *
     * Returns list of CardIssuers
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCardIssuersTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String cardIssuerCode = null;
        String mode = null;
        Integer serviceId = null;
        String merchantNumber = null;
        CardIssuersArrayResponse response = api.getCardIssuers(userId, userType, dataRoleId, roleId, cardIssuerCode, mode, serviceId, merchantNumber);

        // TODO: test validations
    }
    
    /**
     * Find CardIssuer Name List
     *
     * Returns list of CardIssuers Names
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCardIssuersNamesTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String terminalNumber = null;
        String agentNumber = null;
        CardIssuerDetailList response = api.getCardIssuersNames(userId, userType, dataRoleId, roleId, terminalNumber, agentNumber);

        // TODO: test validations
    }
    
    /**
     * Update cardissuers in system
     *
     * Update cardissuers in system
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCardIssuersTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        CardIssuer cardIssuer = null;
        CardIssuersResponse response = api.updateCardIssuers(userId, userType, dataRoleId, roleId, cardIssuer);

        // TODO: test validations
    }
    
}
