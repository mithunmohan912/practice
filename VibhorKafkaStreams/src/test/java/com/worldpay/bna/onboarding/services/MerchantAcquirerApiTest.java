/*
 * Swagger Onboarding
 * This API provides REST end points for Boarding of customer into system.
 *
 * OpenAPI spec version: 8.1.0
 * Contact: DL-WPT-Lords-Of-Code@worldpay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.worldpay.bna.onboarding.services;

import com.worldpay.bna.onboarding.services.invoker.ApiException;
import com.worldpay.bna.onboarding.services.model.MerchantAcquirer;
import com.worldpay.bna.onboarding.services.model.MerchantAcquirerList;
import com.worldpay.bna.onboarding.services.model.MerchantAcquirerResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchantAcquirerApi
 */
@Ignore
public class MerchantAcquirerApiTest {

    private final MerchantAcquirerApi api = new MerchantAcquirerApi();

    
    /**
     * add merchant acquirer
     *
     * Returns a merchantAcquirer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addMerchantAcquirerTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        MerchantAcquirer merchantAcquirer = null;
        MerchantAcquirerResponse response = api.addMerchantAcquirer(userId, userType, dataRoleId, roleId, merchantAcquirer);

        // TODO: test validations
    }
    
    /**
     * List of  Merchant Acquirer
     *
     * Returns a merchant
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantAcquirersTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        String merchantNumber = null;
        Integer merchantAcquirerId = null;
        Integer serviceId = null;
        String cardIssuerCode = null;
        MerchantAcquirerList response = api.getMerchantAcquirers(userId, userType, dataRoleId, roleId, merchantNumber, merchantAcquirerId, serviceId, cardIssuerCode);

        // TODO: test validations
    }
    
    /**
     * Update  Merchant Acquirer
     *
     * Updates  Merchant Acquirer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMerchantAcquirerTest() throws ApiException {
        String userId = null;
        String userType = null;
        String dataRoleId = null;
        Integer roleId = null;
        MerchantAcquirer merchantAcquirer = null;
        MerchantAcquirerResponse response = api.updateMerchantAcquirer(userId, userType, dataRoleId, roleId, merchantAcquirer);

        // TODO: test validations
    }
    
}
